<UserControl x:Class="EQLogParser.TriggersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:local="clr-namespace:EQLogParser"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="30"></RowDefinition>
      <RowDefinition Height="300*"></RowDefinition>
    </Grid.RowDefinitions>
    <Grid.Resources>
      <local:TriggerTemplateSelector x:Key="triggerTemplateSelector"/>
      <local:ZeroConverter x:Key="ZeroConverter" />
    </Grid.Resources>
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
      <Button x:Name="startButton" Margin="2,0,0,3" Height="28" Width="155" Click="PlayButtonClick" Focusable="False" IsHitTestVisible="False" Background="{DynamicResource ContentBackgroundAlt2}">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
          <fa:ImageAwesome x:Name="startIcon" Height="14" Width="14" Margin="5,0,0,0" HorizontalAlignment="Center" Style="{StaticResource EQIconStyle}"/>
          <Label x:Name="titleLabel" Height="24" FontSize="13" Style="{StaticResource EQTitleStyle}" Margin="0,-1,0,0" />
        </StackPanel>
      </Button>
    </StackPanel>
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
      <CheckBox x:Name="watchGina" IsChecked="False" Margin="0,0,8,2" Checked="OptionsChanged" Unchecked="OptionsChanged">Watch for GINA Triggers</CheckBox>
      <ComboBox x:Name="voices" SelectedIndex="0" Margin="0,0,0,2" SelectionChanged="OptionsChanged" />
      <ComboBox x:Name="rateOption" SelectedIndex="0" Margin="0,0,8,2" SelectionChanged="OptionsChanged">
        <ComboBoxItem>Default Voice Rate</ComboBoxItem>
        <ComboBoxItem>Increased Rate 1</ComboBoxItem>
        <ComboBoxItem>Increased Rate 2</ComboBoxItem>
        <ComboBoxItem>Increased Rate 3</ComboBoxItem>
        <ComboBoxItem>Increased Rate 4</ComboBoxItem>
        <ComboBoxItem>Increased Rate 5</ComboBoxItem>
      </ComboBox>
    </StackPanel>
    <Grid Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="500"></ColumnDefinition>
        <ColumnDefinition Width="2"></ColumnDefinition>
        <ColumnDefinition Width="400*"></ColumnDefinition>
      </Grid.ColumnDefinitions>
      <Grid Grid.Column="0">
        <Grid.RowDefinitions>
          <RowDefinition Height="300*"></RowDefinition>
        </Grid.RowDefinitions>
        <syncfusion:SfTreeView
           x:Name="treeView"
           Grid.Row="0"
           AllowDragging="True"
           AllowEditing="True"
           BorderBrush="{DynamicResource ContentBackgroundAlt2}"
           BorderThickness="0"
           CheckBoxMode="Recursive"
           NodeExpanded="NodeExpanded"
           NodeCollapsed="NodeExpanded"
           FullRowSelect="False"
           IsAnimationEnabled="False"
           ItemContextMenuOpening="ItemContextMenuOpening"
           ItemDropped="ItemDropped"
           ItemDropping="ItemDropping"
           ItemEndEdit="ItemEndEdit"
           ItemTemplateDataContextType="Node"
           ItemTemplateSelector="{StaticResource triggerTemplateSelector}"
           Margin="0"
           NodeChecked="NodeChecked"
           NodePopulationMode="OnDemand"
           PreviewMouseRightButtonDown="TreeViewPreviewMouseRightButtonDown"
           Padding="0"
           SelectionMode="Extended"
           SelectionChanged="SelectionChanged"
           ShowRootLines="False">
          <syncfusion:SfTreeView.ItemContextMenu>
            <ContextMenu>
              <MenuItem x:Name="assignOverlayMenuItem" Header="Assign Triggers to Overlay">
                <MenuItem x:Name="assignTextOverlaysMenuItem" Header="Text Overlay" />
                <MenuItem x:Name="assignTimerOverlaysMenuItem" Header="Timer Overlay" />
              </MenuItem>
              <Separator />
              <MenuItem x:Name="collapseMenuItem" Header="Collapse All" Click="CollapseAllClick" />
              <MenuItem x:Name="expandMenuItem" Header="Expand All" Click="ExpandAllClick" />
              <Separator />
              <MenuItem x:Name="newMenuItem" Header="Create New">
                <MenuItem x:Name="newFolder" Header="Folder" Click="CreateNodeClick" />
                <MenuItem x:Name="newTrigger" Header="Trigger" Click="CreateTriggerClick" />
                <MenuItem x:Name="newTextOverlay" Header="Text Overlay" Click="CreateTextOverlayClick" />
                <MenuItem x:Name="newTimerOverlay" Header="Timer Overlay" Click="CreateTimerOverlayClick" />
              </MenuItem>
              <MenuItem x:Name="deleteTriggerMenuItem" Header="Delete" Click="DeleteClick" />
              <MenuItem x:Name="renameMenuItem" Header="Rename" Click="RenameClick" />
              <Separator />
              <MenuItem x:Name="exportMenuItem" Header="Export" ToolTip="Exports Selected Folders" Click="ExportClick" />
              <MenuItem x:Name="importMenuItem" Header="Import" ToolTip="Imports and Merges to the Selected Folder" Click="ImportClick" />
            </ContextMenu>
          </syncfusion:SfTreeView.ItemContextMenu>
        </syncfusion:SfTreeView>
      </Grid>
      <GridSplitter Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch" />
      <Grid Grid.Column="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="30"></RowDefinition>
          <RowDefinition Height="100*"></RowDefinition>
        </Grid.RowDefinitions>
        <syncfusion:PropertyGrid
          x:Name="thePropertyGrid"
          BorderBrush="{DynamicResource ContentBackgroundAlt2}"
          BorderThickness="1"
          ButtonPanelVisibility="Collapsed"
          EnableGrouping="True"
          DescriptionPanelVisibility="Collapsed"
          SearchBoxVisibility="Collapsed"
          IsEnabled="False"
          PropertyExpandMode="NestedMode"
          Margin="0"
          Grid.Row="1"
          SortDirection="{x:Null}"
          EnableToolTip="False"
          AutoGenerateItems="False"
          UpdateSourceMode="Immediately"
          ValueChanged="ValueChanged">
          <syncfusion:PropertyGrid.PropertyNameColumnDefinition>
            <GridLength>200</GridLength>
          </syncfusion:PropertyGrid.PropertyNameColumnDefinition>
          <syncfusion:PropertyGrid.Items>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="Comments" DisplayName="Comments" Description="Notes about this Trigger." />
            <syncfusion:PropertyGridItem x:Name="patternItem" CategoryName="Trigger" PropertyName="Pattern" DisplayName="Pattern" Description="Text to match on. The Text is not case sensitive. If {c} is specified within the Text Pattern it will be replaced with your character name. If {s}, {s1}, {s2}, etc are specified they will match any string. Both {c} and {s} options will be available to use in the Text to Speak field. Note that the {s} options are only available if using Regex while {c} works with both."/>
            <syncfusion:PropertyGridItem x:Name="useRegexItem" CategoryName="Trigger" PropertyName="UseRegex" DisplayName="Pattern Use Regex" Description="True if Regex is to be used for the specified Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="Priority" DisplayName="Priority" Description="Priority used to determine if an Trigger may be interrupted. The highest priority is 1 and lowest is 5. Interruptions may happen any time a higher priority trigger needs to play while a lower priority trigger has not finished."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="TextToSpeak" DisplayName="Text to Speak" Description="The Phrase to be spoken. {c} and {s}, as defined by the Pattern, may also be included."/>
            <syncfusion:PropertyGridItem x:Name="enableTimerItem" CategoryName="Trigger" PropertyName="EnableTimer" DisplayName="Enable Timer" Description="True if a Timer is also started when this Trigger has been executed."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="AltTimerName" DisplayName="Alternate Timer Name"  Visibility="Collapsed" Description="The Name of the Timer defaults to the name of the Trigger. Set this property if an Alternate Name is required. {c} and {s}, as defined by the Pattern, may also be included."/>
            <syncfusion:PropertyGridItem x:Name="timerDurationItem" CategoryName="Timer Settings" PropertyName="DurationSeconds" DisplayName="Duration (s)" Visibility="Collapsed" Description="Number of Seconds after the Trigger has been executed before the Timer completes." />
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndTextToSpeak" DisplayName="Duration End Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken at completion of the Timer. {c} may be included."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndEarlyPattern" DisplayName="End Early Pattern" Visibility="Collapsed" Description="If this Text Pattern is matched it will cause the Timer to end even if there is time remaining."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndUseRegex" DisplayName="End Early Pattern Use Regex" Visibility="Collapsed" Description="True if Regex is to be used for the specified Cancel Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndEarlyPattern2" DisplayName="End Early Pattern 2" Visibility="Collapsed" Description="If this Text Pattern is matched it will cause the Timer to end even if there is time remaining."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndUseRegex2" DisplayName="End Early Pattern 2 Use Regex" Visibility="Collapsed" Description="True if Regex is to be used for the specified Cancel Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="TriggerAgainOption" DisplayName="If Triggered Again" Visibility="Collapsed" Description="What to do if the Trigger is matched a second time but the original Timer has not completed."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="WarningTextToSpeak" DisplayName="Warning Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken at the Warning Time. {c} and {s}, as defined by the Pattern, may also be included."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="WarningSeconds" DisplayName="Warning Time" Visibility="Collapsed" Description="Seconds before Timer ending to warn the user with the Warning Text."/>
            <syncfusion:PropertyGridItem CategoryName="Assigned Overlays" PropertyName="SelectedTextOverlays" DisplayName="Text Overlay" Visibility="Collapsed" Description="Overlay used to display any spoken Text associated with this Trigger."/>
            <syncfusion:PropertyGridItem x:Name="assignedOverlaysItem" CategoryName="Assigned Overlays" PropertyName="SelectedTimerOverlays" DisplayName="Timer Overlay" Visibility="Collapsed" Description="Overlay used to display Timer progress."/>
            <syncfusion:PropertyGridItem x:Name="errorsItem" CategoryName="Status" PropertyName="Errors" DisplayName="Errors" IsReadOnly="True" Description="Any errors or warnings associated with the Trigger settings." />
            <syncfusion:PropertyGridItem x:Name="evalTimeItem" CategoryName="Status" PropertyName="LongestEvalTime" DisplayName="Longest Eval Time (μs)" IsReadOnly="True" Description="The longest time recorded for checking the specified Pattern for a match. The time is in microseconds. If a change is made to the Pattern the value will be reset. This should help identify slow Triggers and ideally this value stays below 1000."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="OverlayComments" DisplayName="Comments" Visibility="Collapsed" Description="Notes about this Overlay." />
            <syncfusion:PropertyGridItem x:Name="fontBrushItem" CategoryName="Overlay" PropertyName="FontBrush" DisplayName="Font Color" Visibility="Collapsed" Description="Font Color used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem x:Name="fontSizeItem" CategoryName="Overlay" PropertyName="FontSize" DisplayName="Font Size" Visibility="Collapsed" Description="Font Size used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Id" DisplayName="Id" IsReadOnly="True" Visibility="Collapsed" Description="Unique ID for this Overlay. Assigned when it is created." />
            <syncfusion:PropertyGridItem x:Name="overlayBrushItem" CategoryName="Overlay" PropertyName="OverlayBrush" DisplayName="Overlay Color" Visibility="Collapsed" Description="Color used for the background of this Overlay."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="TimerBarPreview" DisplayName="Preview" IsReadOnly="True" Visibility="Collapsed" Description="Example Timer Bar based on these settings." />
            <syncfusion:PropertyGridItem x:Name="primaryBrushItem" CategoryName="Timer Overlay" PropertyName="PrimaryBrush" DisplayName="Primary Color" Visibility="Collapsed" Description="Color used for the Timer countdown bars representing the time left." />
            <syncfusion:PropertyGridItem x:Name="secondaryBrushItem" CategoryName="Timer Overlay" PropertyName="SecondaryBrush" DisplayName="Secondary Color" Visibility="Collapsed" Description="Color used for the Timer Bars representing the time used." />
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="SortBy" DisplayName="Sort By" Visibility="Collapsed" Description="Sort Option for Timer Bars on the Overlay. Either by the time they were initially triggered or by the time each one has remaining."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="UseStandardTime" DisplayName="Standardize Time" Visibility="Collapsed" Description="If using Standardized Time all Timer Bars will be based on the same/longest timeframe."/>
            <syncfusion:PropertyGridItem x:Name="fadeDelayItem" CategoryName="Text Overlay" PropertyName="FadeDelay" DisplayName="Fade Delay (s)" Visibility="Collapsed" Description="Seconds before Text fades from screen."/>
          </syncfusion:PropertyGrid.Items>
        </syncfusion:PropertyGrid>
          <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button x:Name="showButton" Visibility="Collapsed" Margin="8,2,0,0" VerticalAlignment="Top" IsEnabled="True" Width="106" Height="24" HorizontalAlignment="Left" Click="ShowClick">Position Overlay</Button>
            <Button x:Name="saveButton" Margin="4,2,0,0" VerticalAlignment="Top" IsEnabled="False" Width="55" Height="24" HorizontalAlignment="Left" Click="SaveClick">Save</Button>
            <Button x:Name="cancelButton" Margin="4,2,0,0" VerticalAlignment="Top" IsEnabled="False" Width="55" Height="24" HorizontalAlignment="Left" Click="CancelClick">Cancel</Button>
          </StackPanel>
      </Grid>
    </Grid>
  </Grid>
</UserControl>
