<UserControl x:Class="EQLogParser.TriggersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:local="clr-namespace:EQLogParser"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="30"></RowDefinition>
      <RowDefinition Height="300*"></RowDefinition>
    </Grid.RowDefinitions>
    <Grid.Resources>
      <local:TriggerTemplateSelector x:Key="triggerTemplateSelector"/>
      <local:ZeroConverter x:Key="ZeroConverter" />
    </Grid.Resources>
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
      <Button x:Name="startButton" Margin="2,0,0,3" Height="28" Width="155" Click="PlayButtonClick" Focusable="False" IsHitTestVisible="False" Background="{DynamicResource ContentBackgroundAlt2}">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
          <fa:ImageAwesome x:Name="startIcon" Height="14" Width="14" Margin="5,0,0,0" HorizontalAlignment="Center" Style="{StaticResource EQIconStyle}"/>
          <Label x:Name="titleLabel" Height="24" FontSize="13" Style="{StaticResource EQTitleStyle}" Margin="0,-1,0,0" />
        </StackPanel>
      </Button>
    </StackPanel>
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
      <CheckBox x:Name="watchGina" IsChecked="False" Margin="0,0,8,2" Checked="OptionsChanged" Unchecked="OptionsChanged">Watch for GINA Triggers</CheckBox>
      <ComboBox x:Name="voices" SelectedIndex="0" Margin="0,0,0,2" SelectionChanged="OptionsChanged" />
      <ComboBox x:Name="rateOption" SelectedIndex="0" Margin="0,0,8,2" SelectionChanged="OptionsChanged">
        <ComboBoxItem>Default Voice Rate</ComboBoxItem>
        <ComboBoxItem>Increased Rate 1</ComboBoxItem>
        <ComboBoxItem>Increased Rate 2</ComboBoxItem>
        <ComboBoxItem>Increased Rate 3</ComboBoxItem>
        <ComboBoxItem>Increased Rate 4</ComboBoxItem>
        <ComboBoxItem>Increased Rate 5</ComboBoxItem>
      </ComboBox>
    </StackPanel>
    <Grid Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="500"></ColumnDefinition>
        <ColumnDefinition Width="2"></ColumnDefinition>
        <ColumnDefinition Width="400*"></ColumnDefinition>
      </Grid.ColumnDefinitions>
      <Grid Grid.Column="0">
        <Grid.RowDefinitions>
          <RowDefinition Height="300*"></RowDefinition>
        </Grid.RowDefinitions>
        <syncfusion:SfTreeView
           x:Name="treeView"
           Grid.Row="0"
           AllowDragging="True"
           AllowEditing="True"
           BorderBrush="{DynamicResource ContentBackgroundAlt2}"
           BorderThickness="0"
           CheckBoxMode="Recursive"
           NodeExpanded="NodeExpanded"
           NodeCollapsed="NodeExpanded"
           FullRowSelect="False"
           IsAnimationEnabled="False"
           ItemContextMenuOpening="ItemContextMenuOpening"
           ItemDropped="ItemDropped"
           ItemDropping="ItemDropping"
           ItemEndEdit="ItemEndEdit"
           ItemTemplateDataContextType="Node"
           ItemTemplateSelector="{StaticResource triggerTemplateSelector}"
           Margin="0"
           NodeChecked="NodeChecked"
           NodePopulationMode="OnDemand"
           PreviewMouseRightButtonDown="TreeViewPreviewMouseRightButtonDown"
           Padding="0"
           SelectionMode="Extended"
           SelectionChanging="SelectionChanging"
           SelectionChanged="SelectionChanged"
           ShowRootLines="False">
          <syncfusion:SfTreeView.ItemContextMenu>
            <ContextMenu>
              <MenuItem x:Name="assignOverlayMenuItem" Header="Assign Triggers to Overlay">
                <MenuItem x:Name="assignTextOverlaysMenuItem" Header="Text Overlay" />
                <MenuItem x:Name="assignTimerOverlaysMenuItem" Header="Timer Overlay" />
              </MenuItem>
              <MenuItem x:Name="assignPriorityMenuItem" Header="Assign Priority to Triggers" />
              <Separator />
              <MenuItem x:Name="collapseMenuItem" Header="Collapse All" Click="CollapseAllClick" />
              <MenuItem x:Name="expandMenuItem" Header="Expand All" Click="ExpandAllClick" />
              <Separator />
              <MenuItem x:Name="newMenuItem" Header="Create New">
                <MenuItem x:Name="newFolder" Header="Folder" Click="CreateNodeClick" />
                <MenuItem x:Name="newTrigger" Header="Trigger" Click="CreateTriggerClick" />
                <MenuItem x:Name="newTextOverlay" Header="Text Overlay" Click="CreateTextOverlayClick" />
                <MenuItem x:Name="newTimerOverlay" Header="Timer Overlay" Click="CreateTimerOverlayClick" />
              </MenuItem>
              <MenuItem x:Name="deleteTriggerMenuItem" Header="Delete" Click="DeleteClick" />
              <MenuItem x:Name="renameMenuItem" Header="Rename" Click="RenameClick" />
              <Separator />
              <MenuItem x:Name="exportMenuItem" Header="Export" ToolTip="Exports Selected Folders" Click="ExportClick" />
              <MenuItem x:Name="importMenuItem" Header="Import" ToolTip="Imports and Merges to the Selected Folder" Click="ImportClick" />
            </ContextMenu>
          </syncfusion:SfTreeView.ItemContextMenu>
        </syncfusion:SfTreeView>
      </Grid>
      <GridSplitter Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch" />
      <Grid Grid.Column="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="30"></RowDefinition>
          <RowDefinition Height="100*"></RowDefinition>
        </Grid.RowDefinitions>
        <syncfusion:PropertyGrid
          x:Name="thePropertyGrid"
          BorderBrush="{DynamicResource ContentBackgroundAlt2}"
          BorderThickness="1"
          ButtonPanelVisibility="Collapsed"
          EnableGrouping="True"
          DescriptionPanelVisibility="Collapsed"
          SearchBoxVisibility="Collapsed"
          IsEnabled="False"
          PropertyExpandMode="NestedMode"
          Margin="0"
          Grid.Row="1"
          SortDirection="{x:Null}"
          EnableToolTip="False"
          AutoGenerateItems="False"
          UpdateSourceMode="Immediately"
          ValueChanged="ValueChanged">
          <syncfusion:PropertyGrid.PropertyNameColumnDefinition>
            <GridLength>220</GridLength>
          </syncfusion:PropertyGrid.PropertyNameColumnDefinition>
          <syncfusion:PropertyGrid.Items>
            <syncfusion:PropertyGridItem CategoryName="Overlays" PropertyName="SelectedTextOverlays" DisplayName="Assigned Text" Visibility="Collapsed" Description="Overlays used to display spoken Text associated with this Trigger."/>
            <syncfusion:PropertyGridItem x:Name="assignedOverlaysItem" CategoryName="Overlays" PropertyName="SelectedTimerOverlays" DisplayName="Assigned Timer" Visibility="Collapsed" Description="Overlays used to display Timers."/>
            <syncfusion:PropertyGridItem x:Name="triggerFontBrushItem" CategoryName="Overlays" PropertyName="TriggerFontBrush" DisplayName="Text Font Color" Visibility="Collapsed" Description="Use default Font Color defined by the Overlay or choose a specific color for this Trigger."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="Comments" DisplayName="Comments" Description="Notes about this Trigger." />
            <syncfusion:PropertyGridItem x:Name="patternItem" CategoryName="Trigger" PropertyName="Pattern" DisplayName="Pattern" Description="Text to match on. The Text is not case sensitive. If {c} is specified within the Text Pattern it will be replaced with your character name. If {s}, {s1}, {s2}, etc are specified they will match any string including spaces. If {n}, {n1}, {n2}, etc are specified they will match any number. {c}, {s}, and {n} options will be available to use in the Text to Speak field and Alternate Bar Name. Note that the {s} and {n} options are only available if using Regex while {c} works with both. Additionally, {n} also supports comparison. For Example: {n>40}, {n>=50}, {n==20}"/>
            <syncfusion:PropertyGridItem x:Name="useRegexItem" CategoryName="Hidden Settings" PropertyName="UseRegex" DisplayName="Pattern Use Regex" Visibility="Hidden"  Description="True if Regex is to be used for the specified Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="Priority" DisplayName="Priority" Description="Priority used to determine if a Trigger may be interrupted. The highest priority is 1 and lowest is 5. Interruptions may happen any time a higher priority trigger needs to play while a lower priority trigger has not finished."/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="SoundOrText" DisplayName="Sound/Text to Speak" Description="The Phrase to be spoken or sound file to play. The text may include {c}, {s}, and {n} as defined by the Pattern. For additional wav files, copy them to Program Files\EQLogParser\data\sounds"/>
            <syncfusion:PropertyGridItem CategoryName="Trigger" PropertyName="TextToDisplay" DisplayName="Text to Display" Description="The Text to Display in a Text Overlay. It may include {c}, {s}, and {n} as defined by the Pattern."/>
            <syncfusion:PropertyGridItem x:Name="evalTimeItem" CategoryName="Trigger" PropertyName="WorstEvalTime" DisplayName="Worst Eval Time (μs)" IsReadOnly="True" Description="The worst time recorded for checking the specified Pattern for a match. The time is in microseconds. If a change is made to the Pattern the value will be reset. This should help identify slow Triggers and ideally this value stays below 1000."/>
            <syncfusion:PropertyGridItem x:Name="enableTimerItem" CategoryName="Trigger" PropertyName="EnableTimer" DisplayName="Enable Timer" Description="True if a Timer is also started when this Trigger has been executed."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="AltTimerName" DisplayName="Alternate Timer Name"  Visibility="Collapsed" Description="The Name of the Timer defaults to the name of the Trigger. Set this property if an Alternate Name is required. {c} and {s}, as defined by the Pattern, may also be included."/>
            <syncfusion:PropertyGridItem x:Name="timerDurationItem" CategoryName="Timer Settings" PropertyName="DurationTimeSpan" DisplayName="Duration" Visibility="Collapsed" Description="Number of Minutes/Seconds after the Trigger has been executed before the Timer completes." />
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndSoundOrText" DisplayName="End Sound/Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken or sound file to play at completion of the Timer. The text may include {c}, {s} and {n}, as defined by the Pattern. For additional wav files, copy them to Program Files\EQLogParser\data\sounds"/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="EndTextToDisplay" DisplayName="End Text to Display" Description="The Text to Display in a Text Overlay at completion of the Timer. It may include {c}, {s}, and {n} as defined by the Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="TriggerAgainOption" DisplayName="If Triggered Again" Visibility="Collapsed" Description="What to do if the Trigger is matched a second time but the original Timer has not completed."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="ResetDurationTimeSpan" DisplayName="Reset Duration" Visibility="Collapsed" Description="Number of Minutes/Seconds required for the Timer to fully Reset if using a Timer Overlay configured as Cooldown. This is generally your cooldown time on an ability." />
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="WarningSeconds" DisplayName="Warn With Time Remaining" Visibility="Collapsed" Description="Seconds before Timer ending to warn the user with the Warning Text/Sound."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="WarningSoundOrText" DisplayName="Warning Sound/Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken or sound file to play at the Warning Time. The text may include {c}, {s} and {n}, as defined by the Pattern. For additional wav files, copy them to Program Files\EQLogParser\data\sounds"/>
            <syncfusion:PropertyGridItem CategoryName="Timer Settings" PropertyName="WarningTextToDisplay" DisplayName="Warning Text to Display" Description="The Text to Display in a Text Overlay at the Warning Time. It may include {c}, {s}, and {n} as defined by the Pattern."/>
            <syncfusion:PropertyGridItem x:Name="endEarlyPatternItem" CategoryName="Timer End Early Settings" PropertyName="EndEarlyPattern" DisplayName="Pattern" Visibility="Collapsed" Description="If this Text Pattern is matched it will cause the Timer to end even if there is time remaining. The same options available for the initial trigger Pattern may also be specified."/>
            <syncfusion:PropertyGridItem CategoryName="Hidden Settings" PropertyName="EndUseRegex" DisplayName="Pattern Use Regex" Visibility="Collapsed" Description="True if Regex is to be used for the specified EndEarly Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlyPattern2" DisplayName="Pattern 2" Visibility="Collapsed" Description="If this Text Pattern is matched it will cause the Timer to end even if there is time remaining. The same options available for the initial trigger Pattern may also be specified."/>
            <syncfusion:PropertyGridItem CategoryName="Hidden Settings" PropertyName="EndUseRegex2" DisplayName="Pattern 2 Use Regex" Visibility="Collapsed" Description="True if Regex is to be used for the additional End Early Pattern (2)."/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlySoundOrText" DisplayName="Sound/Text to Speak"  Visibility="Collapsed" Description="The Phrase to be spoken or sound file to play if the Timer Ends Early. If specified the Duration End Sound/Text to Play will be ignored. The text may include {c}, {s} and {n}, as defined by the Pattern. For additional wav files, copy them to Program Files\EQLogParser\data\sounds"/>
            <syncfusion:PropertyGridItem CategoryName="Timer End Early Settings" PropertyName="EndEarlyTextToDisplay" DisplayName="Text to Display" Description="The Text to Display in a Text Overlay if the Timer Ended Early. It may include {c}, {s}, and {n} as defined by the Pattern."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="OverlayComments" DisplayName="Comments" Visibility="Collapsed" Description="Notes about this Overlay." />
            <syncfusion:PropertyGridItem x:Name="fontBrushItem" CategoryName="Overlay" PropertyName="FontBrush" DisplayName="Font Color" Visibility="Collapsed" Description="Font Color used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem x:Name="fontSizeItem" CategoryName="Overlay" PropertyName="FontSize" DisplayName="Font Size" Visibility="Collapsed" Description="Font Size used to display the Text on this Overlay."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Id" DisplayName="Id" IsReadOnly="True" Visibility="Collapsed" Description="Unique ID for this Overlay. Assigned when it is created." />
            <syncfusion:PropertyGridItem x:Name="overlayBrushItem" CategoryName="Overlay" PropertyName="OverlayBrush" DisplayName="Overlay Color" Visibility="Collapsed" Description="Color used for the background of this Overlay."/>
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Left" DisplayName="Positon Left" IsReadOnly="False" Visibility="Collapsed" Description="Left most position for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Top" DisplayName="Positon Top" IsReadOnly="False" Visibility="Collapsed" Description="Top most position for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Height" DisplayName="Position Height" IsReadOnly="False" Visibility="Collapsed" Description="Height for the Overlay Window." />
            <syncfusion:PropertyGridItem CategoryName="Overlay" PropertyName="Width" DisplayName="Position Width" IsReadOnly="False" Visibility="Collapsed" Description="Width for the Overlay Window." />
            <syncfusion:PropertyGridItem x:Name="timerModeItem" CategoryName="Timer Overlay" PropertyName="TimerMode" DisplayName="Mode" Visibility="Collapsed" Description="Standard Mode Overlays will countdown for the Duration and be removed. Cooldown Mode Overlays will restart the Timer after the Reset Time while showing progress."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="TimerBarPreview" DisplayName="Preview" IsReadOnly="True" Visibility="Collapsed" Description="Example Timer Bar based on these settings." />
            <syncfusion:PropertyGridItem x:Name="activeBrushItem" CategoryName="Timer Overlay" PropertyName="ActiveBrush" DisplayName="Active Color" Visibility="Collapsed" Description="Color used for the Timer countdown bars representing the time left." />
            <syncfusion:PropertyGridItem x:Name="backgroundBrushItem" CategoryName="Timer Overlay" PropertyName="BackgroundBrush" DisplayName="Background Color" Visibility="Collapsed" Description="Color used for the Timer Bars representing the time used." />
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="SortBy" DisplayName="Sort By" Visibility="Collapsed" Description="Sort Option for Timer Bars on the Overlay. Either by the time they were initially triggered or by the time each one has remaining."/>
            <syncfusion:PropertyGridItem CategoryName="Timer Overlay" PropertyName="UseStandardTime" DisplayName="Standardize Time" Visibility="Collapsed" Description="If using Standardized Time all Timer Bars will be based on the same/longest timeframe."/>
            <syncfusion:PropertyGridItem x:Name="idleBrushItem" CategoryName="Cooldown Overlay" PropertyName="IdleBrush" DisplayName="Idle Color" Visibility="Collapsed" Description="Color used for the Timer Bars representing time waiting for activation." />
            <syncfusion:PropertyGridItem CategoryName="Cooldown Overlay" PropertyName="IdleTimeoutTimeSpan" DisplayName="Idle Timeout" Visibility="Collapsed" Description="If specified the Cooldown Timers will be removed once they have all been idle for the configured time." />
            <syncfusion:PropertyGridItem x:Name="resetBrushItem" CategoryName="Cooldown Overlay" PropertyName="ResetBrush" DisplayName="Reset Color" Visibility="Collapsed" Description="Color used for the Timer countdown bars representing the reset time left." />
            <syncfusion:PropertyGridItem x:Name="fadeDelayItem" CategoryName="Text Overlay" PropertyName="FadeDelay" DisplayName="Fade Delay (s)" Visibility="Collapsed" Description="Seconds before Text fades from screen."/>
          </syncfusion:PropertyGrid.Items>
        </syncfusion:PropertyGrid>
          <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button x:Name="showButton" Visibility="Collapsed" Margin="8,2,0,0" VerticalAlignment="Top" IsEnabled="True" Width="106" Height="24" HorizontalAlignment="Left" Click="ShowClick">Preview Overlay</Button>
            <Button x:Name="saveButton" Margin="4,2,0,0" VerticalAlignment="Top" IsEnabled="False" Width="55" Height="24" HorizontalAlignment="Left" Click="SaveClick">Save</Button>
            <Button x:Name="cancelButton" Margin="4,2,0,0" VerticalAlignment="Top" IsEnabled="False" Width="55" Height="24" HorizontalAlignment="Left" Click="CancelClick">Cancel</Button>
          </StackPanel>
      </Grid>
    </Grid>
  </Grid>
</UserControl>
