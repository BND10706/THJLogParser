name: Build Single Executable

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
        
    # First exclude problematic projects before any restore operations
    - name: Update solution to exclude WixCustom and EQLogParserInstall projects
      run: |
        dotnet sln EQLogParser.sln remove WixCustom/WixCustom.csproj || echo "WixCustom already removed or not found"
        dotnet sln EQLogParser.sln remove EQLogParserInstall/EQLogParserInstall.wixproj || echo "EQLogParserInstall already removed or not found"
        
    # Exclude theme projects that have Syncfusion.Calculate.Base dependency issues
    - name: Update solution to exclude theme projects
      run: |
        dotnet sln EQLogParser.sln remove MaterialDarkCustom/Syncfusion.Themes.MaterialDarkCustom.csproj || echo "MaterialDarkCustom already removed or not found"
        dotnet sln EQLogParser.sln remove MaterialLightCustom/Syncfusion.Themes.MaterialLightCustom.csproj || echo "MaterialLightCustom already removed or not found"
        
    # Update the EQLogParser.csproj to fix project and runtime settings
    - name: Update main project file to fix dependencies and runtime settings
      run: |
        $projFile = "EQLogParser/EQLogParser.csproj"
        $content = Get-Content $projFile -Raw
        
        # Remove theme project references
        $content = $content -replace '<ProjectReference Include=".\\MaterialDarkCustom\\Syncfusion.Themes.MaterialDarkCustom.csproj" />', ''
        $content = $content -replace '<ProjectReference Include=".\\MaterialLightCustom\\Syncfusion.Themes.MaterialLightCustom.csproj" />', ''
        
        # Explicitly add RuntimeIdentifiers element if it doesn't exist
        if ($content -notmatch '<RuntimeIdentifiers>') {
          $replacement = '<PropertyGroup>' + [Environment]::NewLine + '    <PublishSingleFile>true</PublishSingleFile>' + [Environment]::NewLine + '    <RuntimeIdentifiers>win-x64</RuntimeIdentifiers>'
          $content = $content -replace '<PropertyGroup>\s*<PublishSingleFile>true</PublishSingleFile>', $replacement
        }
        
        # Update theme package references if they're causing issues
        $content = $content -replace '<PackageReference Include="Syncfusion.Themes.MaterialDark.WPF".*?/>', ''
        $content = $content -replace '<PackageReference Include="Syncfusion.Themes.MaterialLight.WPF".*?/>', ''
        
        Set-Content $projFile $content
    
    # Skip clean step as it's causing issues
    
    - name: Clear NuGet cache and restore dependencies with specific runtime
      run: |
        dotnet nuget locals all --clear
        dotnet restore EQLogParser/EQLogParser.csproj /p:RuntimeIdentifier=win-x64
        
    - name: Build Single Executable
      run: |
        dotnet publish EQLogParser/EQLogParser.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:DebugType=None /p:DebugSymbols=false /p:EnableCompressionInSingleFile=true /p:IncludeAllContentForSelfExtract=true -o publish
        
    - name: Rename executable
      run: |
        cd publish
        if (Test-Path "EQLogParser.exe") {
          Rename-Item -Path "EQLogParser.exe" -NewName "THJLogParser.exe"
        }
        
    - name: Copy data files
      run: |
        if (Test-Path "EQLogParser/data") {
          Copy-Item -Path "EQLogParser/data" -Destination "publish/data" -Recurse -Force
        }
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: THJLogParser
        path: publish/ 